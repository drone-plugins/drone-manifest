version: '{build}'
image: 'Visual Studio 2017'
platform: x64

clone_folder: 'c:\go\src\github.com\drone-plugins\drone-manifest'
max_jobs: 1

environment:
  DOCKER_USERNAME:
    secure: '4YzzahbEiMZQJpOCOd1LAw=='
  DOCKER_PASSWORD:
    secure: 'VqO/G3Zfslu6zSLdwHKO+Q=='

install:
  - ps: |
      docker version
      go version

build_script:
  - ps: |
      if ( $env:APPVEYOR_REPO_TAG -eq 'false' ) {
        go build -ldflags "-X main.build=$env:APPVEYOR_BUILD_VERSION" -a -o drone-manifest.exe
      } else {
        $version = $env:APPVEYOR_REPO_TAG_NAME.substring(1)
        go build -ldflags "-X main.version=$version -X main.build=$env:APPVEYOR_BUILD_VERSION" -a -o drone-manifest.exe
      }

      docker pull microsoft/nanoserver:10.0.14393.1593
      docker build -f Dockerfile.windows -t plugins/manifest:windows-amd64 .

test_script:
  - ps: |
      docker run --rm plugins/manifest:windows-amd64 --version

deploy_script:
  - ps: |
      $ErrorActionPreference = 'Stop';

      if ( $env:APPVEYOR_PULL_REQUEST_NUMBER ) {
        Write-Host Nothing to deploy.
      } else {
        docker login --username $env:DOCKER_USERNAME --password $env:DOCKER_PASSWORD

        if ( $env:APPVEYOR_REPO_TAG -eq 'true' ) {
          $major,$minor,$patch = $env:APPVEYOR_REPO_TAG_NAME.substring(1).split('.')

          docker push plugins/manifest:windows

          docker tag plugins/manifest:windows plugins/manifest:$major.$minor.$patch-windows
          docker push plugins/manifest:$major.$minor.$patch-windows-amd64

          docker tag plugins/manifest:windows plugins/manifest:$major.$minor-windows
          docker push plugins/manifest:$major.$minor-windows-amd64

          docker tag plugins/manifest:windows plugins/manifest:$major-windows
          docker push plugins/manifest:$major-windows-amd64
        } else {
          if ( $env:APPVEYOR_REPO_BRANCH -eq 'master' ) {
            docker push plugins/manifest:windows-amd64
          }
        }
      }
